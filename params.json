{
  "name": "IDES Data Preparation - OpenSSL",
  "tagline": "Decrypting notifications received from IDES with OpenSSL",
  "body": "## IDES Data Preparation\r\n\r\nThe International Data Exchange Service (IDES) is a secure managed file transfer service that allows financial institutions and tax authorities to securely send information on financial accounts held by U.S. taxpayers in accordance with the Foreign Account Tax Compliance Act (FATCA). Files transmitted via IDES must be encrypted and packaged in accordance with published data preparation instructions. The data preparation process is an important step to ensure that information transmitted via IDES conforms to U.S security standards to safeguard sensitive information.\r\n\r\nThe IDES Data Preparation OpenSSL project repository demonstrates the commands necessary to decrypt notifications downloaded from the IDES portal. The included commands are Windows specific, Linux specific, and a process that includes manual editing that will work for those and other systems.\r\n\r\nThe sample commands are intended to be run from a batch file located along with the OpenSSL executable, the Key and Payload files from the notification, and the receiver's private key. \r\n\r\nPlease note that there are many open market tools that produce the same results; however, the IRS does not endorse any commercial products, including the frameworks used in the example. \r\n\r\n### Windows Batch Scripting\r\n\r\nThe following code should be placed into a batch file and run in the same folder as the openssl executable. \r\n\r\nThe following files are required and the filename in the batch script will need to be replaced with your filename for each:\r\n\r\nKEYFILE - this is the Key file that will be in the downloaded notification .zip file<br>\r\nPRIVATEKEY - this will be your private key that corresponds to the certificate that was uploaded into IDES<br>\r\nPAYLOAD - this is the Payload file that will be in the downloaded notification .zip file<br>\r\n\r\n\r\nThe first command will decrypt the AES key. The batch code will parse the hex values of the AES key and prepare it for the second command. The second command will use the AES key in hex format and decrypt the Payload file. The output will be the decrypted Payload .zip file.\r\n\r\n```\r\n\r\nopenssl rsautl -decrypt -hexdump -in KEYFILE -inkey PRIVATEKEY -out aeskey.txt\r\n\r\nset /p firstline=< aeskey.txt  \r\nSet line1=%firstline%     \r\nset result1=%line1:~7,48%                           \r\n\r\nSetlocal EnableDelayedExpansion\r\nfor /f \"tokens=* delims= \" %%i in (aeskey.txt) do (\r\nset var=%%i\r\n)\r\nset result2=!var:~7,48!  \r\n\r\nset result1=%result1: =%\r\nset result1=%result1:-=%\r\nset result1=%result1:~0,32%\r\nset result2=%result2: =%\r\nset result2=%result2:-=%\r\nset result2=%result2:~0,32%\r\nset combined=%result1%%result2%\r\n\r\nopenssl aes-256-ecb -d -in PAYLOAD -out PAYLOAD.zip -K %combined%\r\n\r\n\r\n```\r\n \r\n\r\nRunning the batch file:\r\n![Image 1](http://irsgov.github.io/IDES-Data-Preparation-OpenSSL/images/image11.png)\r\nFigure 1\r\n\r\n### Linux Shell Scripting\r\n\r\nSimilar to the Windows method above, the following code should be placed into a shell script and run in the same folder as the openssl executable. However, this script will use the cut command to prepare the hex data.\r\n\r\nThe following files are required and the file names passed to the batch script will need to be replaced with your filename for each:\r\n\r\nprivate_key - this will be your private key that corresponds to the certificate that was uploaded into IDES<br>\r\nkey_file - this is the Key file that will be in the downloaded notification .zip file<br>\r\npayload_file - this is the Payload file that will be in the downloaded notification .zip file<br>\r\n\r\n```\r\nprivate_key=$1 #this will be your private key that corresponds to the certificate that was uploaded into IDES\r\n\r\nkey_file=$2 #this is the Key file that will be in the downloaded notification .zip file \r\n\r\npayload_file=$3 #this is the Payload file that will be in the downloaded notification .zip file\r\n\r\noutput_file=$4 #this is the expected output filename, and will be in a .zip format\r\n\r\nhexvalue='openssl rsautl -decrypt -hexdump -inkey $private_key_file -in $random_key_file|cut -c-55|cut -c7-55|tr -d \"\\n\"|sed 's/[ -]//g' ';\r\n\r\nopenssl enc -d -aes-256-ecb -in $payload_file -out $output_file -K $hexvalue\r\n```\r\n\r\nAn example of running the script with the required parameters:\r\n```\r\ndecrypt.sh privatekey.pem 000000.00000.TA.124_Key 000000.00000.TA.840_Payload 000000.00000.TA.840_Payload.zip\r\n\r\n```\r\n\r\n### Manual OpenSSL Commands\r\n\r\nIf you are having trouble with an automated method above, there are additional steps you can take to decrypt the AES key, manually get the required hex key data, and use it to decrypt the Payload file. \r\n\r\nThe process is similar to the automated method above. The following files are required and the filename in the batch script will need to be replaced with your filename for each:\r\n\r\nKEYFILE - this is the Key file that will be in the downloaded notification .zip file<br>\r\nPRIVATEKEY - this will be your private key that corresponds to the certificate that was uploaded into IDES<br>\r\nPAYLOAD - this is the Payload file that will be in the downloaded notification .zip file<br>\r\n\r\nThe following code should be run in the same folder as the openssl executable and necessary files.\r\n\r\nDecrypting the AES key:\r\n![Image 2](http://irsgov.github.io/IDES-Data-Preparation-OpenSSL/images/image1.png)\r\nFigure 2\r\n\r\nThe hexdump flag in the command above will output the key in hexadecimal format which is needed to decrypt the Payload file. However, there is extra information that is included that needs to be removed before it can be used in the next command. You can use a text editor to open the aeskey.txt file which is the output of the first command.\r\n\r\nExample Hex data in Notepad++:\r\n![Image 3](http://irsgov.github.io/IDES-Data-Preparation-OpenSSL/images/image2.png)\r\nFigure 3\r\n\r\nExample Hex data in Notepad:\r\n![Image 4](http://irsgov.github.io/IDES-Data-Preparation-OpenSSL/images/image3.png)\r\nFigure 4\r\n\r\nThe hex content that is needed from the file is bolded below. The rest of the information needs to be removed. \r\n\r\n0000 - **e0 a8 fc 55 88 72 3d 5f-24 0f e4 7f 39 42 df a9**   ...U.r=_$...9B..\r\n\r\n0010 - **c4 34 ab 26 bb b2 dc 20-65 59 d7 14 cd b0 15 47**   .4.&... eY.....G\r\n\r\n* With the beginning and ending information stripped out.\r\n\r\n**e0 a8 fc 55 88 72 3d 5f-24 0f e4 7f 39 42 df a9**\r\n\r\n**c4 34 ab 26 bb b2 dc 20-65 59 d7 14 cd b0 15 47**\r\n\r\n* With the spaces and dashes removed and leftover characters together, the end result is a 64 character string. The string must be exactly 64 characters in length:\r\n\r\n**e0a8fc5588723d5f240fe47f3942dfa9c434ab26bbb2dc206559d714cdb01547**\r\n\r\nThe second command to decrypt the Payload file can then be executed using the 64 character hex key string. The Payload file from the downloaded notification zip file is needed as well as the 64 character hex key string.\r\n\r\n```\r\nopenssl aes-256-ecb -d -in 000000.00000.TA.840_Payload -out 000000.00000.TA.840_Payload.zip -K e0a8fc5588723d5f240fe47f3942dfa9c434ab26bbb2dc206559d714cdb01547\r\n```\r\nDecrypting the Payload file:\r\n![Image 5](http://irsgov.github.io/IDES-Data-Preparation-OpenSSL/images/image4.png)\r\nFigure 5\r\n\r\nThis will decrypt the encrypted Payload file giving you the zip file which contains the XML Payload file.\r\n\r\nFolder Contents with the Payload .zip file:\r\n![Image 6](http://irsgov.github.io/IDES-Data-Preparation-OpenSSL/images/image5.png)\r\nFigure 6\r\n\r\n### Disclaimer:\r\nWe waive copyright and related rights in the work worldwide through the CC0 1.0 Universal public domain dedication. Unless expressly stated otherwise, the person who associated a work with this deed makes no warranties about the work, and disclaims liability for all uses of the work, to the fullest extent permitted by applicable law. When using or citing the work, you should not imply endorsement by the author or the affirmer.\r\n\r\n",
  "google": "UA-8154638-3",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}